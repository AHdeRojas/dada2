% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/dada.R
\name{dada}
\alias{dada}
\title{The dada function takes as input the unique sequences in an amplicon sequencing sample paired
 with their abundances, and returns the sample genotypes paired with their abundances
 inferred by the Divisive Amplicon Denoising Algorithm (Rosen, Callahan, Fisher, Holmes 2012).}
\usage{
dada(uniques, err = matrix(c(0.991, 0.003, 0.003, 0.003, 0.003, 0.991, 0.003,
  0.003, 0.003, 0.003, 0.991, 0.003, 0.003, 0.003, 0.003, 0.991), nrow = 4,
  byrow = T), score = matrix(c(5, -4, -4, -4, -4, 5, -4, -4, -4, -4, 5, -4,
  -4, -4, -4, 5), nrow = 4, byrow = T), gap_penalty = -8,
  self_consist = FALSE)
}
\arguments{
\item{uniques}{(Required). Named integer vector.
 This is a vector of abundances of unique sequences, with the sequence specified by the name.
 Sequences are only allowed to contain A/C/G/T/N/- characters.
 Warning: N and - need more testing!}

\item{err}{(Optional). 4x4 numeric matrix.
 The matrix of estimated error rates from one nucleotide to another.
 err[i,j] = Prob(j in sequence | i in sample genotype).
 A=1, C=2, G=3, T=4 for indexing. Rows required to sum to 1.}

\item{score}{(Optional). 4x4 numeric matrix.
 The score matrix used by the Needleman-Wunsch alignment algorithm. Defaults to nuc44.}

\item{gap_penalty}{(Optional). \code{numeric(1)}
 The gap penalty for the Needleman-Wunsch alignemnt algoirithm. Defaults to -8.}

\item{self_consist}{(Optional). \code{logical(1)}
 When true, DADA will re-estimate error rates after inferring sample genotypes, and then repeat
 the algorithm using the newly estimated error rates. This continues until convergence.}
}
\description{
The dada function takes as input the unique sequences in an amplicon sequencing sample paired
 with their abundances, and returns the sample genotypes paired with their abundances
 inferred by the Divisive Amplicon Denoising Algorithm (Rosen, Callahan, Fisher, Holmes 2012).
}

